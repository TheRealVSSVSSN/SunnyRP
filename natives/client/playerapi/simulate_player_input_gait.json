{
  "title": "SIMULATE_PLAYER_INPUT_GAIT",
  "breadcrumbs": [
    "Native Reference",
    "PLAYERAPI",
    "SIMULATE_PLAYER_INPUT_GAIT"
  ],
  "content": "0x477D5D63E63ECA5D0x0D77CC34// SimulatePlayerInputGait\nvoid SIMULATE_PLAYER_INPUT_GAIT(Player player, float amount, int gaitType, float rotationSpeed, BOOL p4, BOOL p5);Parameters:player: The player to target (always your local player id).amount: For game pads, using anything less than 1.0 will make it partially press analog controls (like sticks/triggers).gaitType: Value in increments of 100's. 2000, 500, 300, 200, etc. Set to -1 if you want your ped to walk forever.rotationSpeed: Determines the counterclockwise rotation angle when walking.p4: Always truep5: Always falseThis is to make the player walk without accepting input.Call this native every frame so you can control the direction of your ped.Examples:C#SimulatePlayerInputGait(Game.Player.Handle, 1f, 100, 1f, 1, 0); //Player will go forward for 100ms\nSimulatePlayerInputGait(Game.Player.Handle, 1f, -1, 0f, 1, 0); //Player will go straight forward forever, stop when facing walls or obstacles.",
  "codeBlocks": [
    "// SimulatePlayerInputGait\nvoid SIMULATE_PLAYER_INPUT_GAIT(Player player, float amount, int gaitType, float rotationSpeed, BOOL p4, BOOL p5);",
    "SimulatePlayerInputGait(Game.Player.Handle, 1f, 100, 1f, 1, 0); //Player will go forward for 100ms\nSimulatePlayerInputGait(Game.Player.Handle, 1f, -1, 0f, 1, 0); //Player will go straight forward forever, stop when facing walls or obstacles."
  ],
  "urls": [
    "https://docs.fivem.net/docs/",
    "https://docs.fivem.net/natives/",
    "https://github.com/citizenfx/natives/edit/master/PLAYER/SimulatePlayerInputGait.md",
    "https://www.rockstargames.com/privacy",
    "https://www.rockstargames.com/cookies"
  ],
  "tags": [
    "client"
  ]
}