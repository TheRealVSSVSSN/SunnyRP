{
  "title": "COMPARE_STRINGS",
  "breadcrumbs": [
    "Native Reference",
    "MISCAPI",
    "COMPARE_STRINGS"
  ],
  "content": "0x1E34710ECD4AB0EB0xFE25A58F// CompareStrings\nint COMPARE_STRINGS(char* str1, char* str2, BOOL matchCase, int maxLength);Compares two strings up to a specified number of characters.\nParameters:\nstr1 - String to be compared.\nstr2 - String to be compared.\nmatchCase - Comparison will be case-sensitive.\nmaxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.\nReturns:\nA value indicating the relationship between the strings:\n<0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)\n0 - The contents of both strings are equal.\n>0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)\nExamples:\nMISC::COMPARE_STRINGS(\"STRING\", \"string\", false, -1); // 0; equal\nMISC::COMPARE_STRINGS(\"TESTING\", \"test\", false, 4); // 0; equal\nMISC::COMPARE_STRINGS(\"R2D2\", \"R2xx\", false, 2); // 0; equal\nMISC::COMPARE_STRINGS(\"foo\", \"bar\", false, -1); // 4; 'f' > 'b'\nMISC::COMPARE_STRINGS(\"A\", \"A\", true, 1); // 0; equal\nWhen comparing case-sensitive strings, lower-case characters are greater than upper-case characters:\nMISC::COMPARE_STRINGS(\"A\", \"a\", true, 1); // -1; 'A' < 'a'\nMISC::COMPARE_STRINGS(\"a\", \"A\", true, 1); // 1; 'a' > 'A'",
  "codeBlocks": [
    "// CompareStrings\nint COMPARE_STRINGS(char* str1, char* str2, BOOL matchCase, int maxLength);",
    "Compares two strings up to a specified number of characters.\nParameters:\nstr1 - String to be compared.\nstr2 - String to be compared.\nmatchCase - Comparison will be case-sensitive.\nmaxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.\nReturns:\nA value indicating the relationship between the strings:\n<0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)\n0 - The contents of both strings are equal.\n>0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)\nExamples:\nMISC::COMPARE_STRINGS(\"STRING\", \"string\", false, -1); // 0; equal\nMISC::COMPARE_STRINGS(\"TESTING\", \"test\", false, 4); // 0; equal\nMISC::COMPARE_STRINGS(\"R2D2\", \"R2xx\", false, 2); // 0; equal\nMISC::COMPARE_STRINGS(\"foo\", \"bar\", false, -1); // 4; 'f' > 'b'\nMISC::COMPARE_STRINGS(\"A\", \"A\", true, 1); // 0; equal\nWhen comparing case-sensitive strings, lower-case characters are greater than upper-case characters:\nMISC::COMPARE_STRINGS(\"A\", \"a\", true, 1); // -1; 'A' < 'a'\nMISC::COMPARE_STRINGS(\"a\", \"A\", true, 1); // 1; 'a' > 'A'\n"
  ],
  "urls": [
    "https://docs.fivem.net/docs/",
    "https://docs.fivem.net/natives/",
    "https://github.com/citizenfx/natives/edit/master/MISC/CompareStrings.md",
    "https://www.rockstargames.com/privacy",
    "https://www.rockstargames.com/cookies"
  ],
  "tags": [
    "client"
  ]
}