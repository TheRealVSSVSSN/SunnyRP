{
  "title": "REGISTER_KEY_MAPPING",
  "breadcrumbs": [
    "Native Reference",
    "CFXAPI",
    "REGISTER_KEY_MAPPING"
  ],
  "content": "0xD7664FD1// RegisterKeyMapping\nvoid REGISTER_KEY_MAPPING(char* commandString, char* description, char* defaultMapper, char* defaultParameter);Parameters:commandString: The command to execute, and the identifier of the binding.description: A description for in the settings menu.defaultMapper: The mapper ID to use for the default binding, e.g. keyboard.defaultParameter: The IO parameter ID to use for the default binding, e.g. f3.Registers a key mapping for the current resource.See the related cookbook post for more information.Below you can find some examples on how to create these keybindings as well as the alternate keybinding syntax, which is preceded by ~! to indicate that it's an alternate key.Examples:Lualocal handsUp = false\nCreateThread(function()\n    while true do\n        Wait(0)\n        if handsUp then\n            TaskHandsUp(PlayerPedId(), 250, PlayerPedId(), -1, true)\n        end\n    end\nend)\nRegisterCommand('+handsup', function()\n    handsUp = true\nend, false)\nRegisterCommand('-handsup', function()\n    handsUp = false\nend, false)\n\nRegisterKeyMapping('+handsup', 'Hands Up', 'keyboard', 'i')\n\n-- Alternate keybinding syntax\nRegisterKeyMapping('~!+handsup', 'Hands Up - Alternate Key', 'keyboard', 'o')",
  "codeBlocks": [
    "// RegisterKeyMapping\nvoid REGISTER_KEY_MAPPING(char* commandString, char* description, char* defaultMapper, char* defaultParameter);",
    "local handsUp = false\nCreateThread(function()\n    while true do\n        Wait(0)\n        if handsUp then\n            TaskHandsUp(PlayerPedId(), 250, PlayerPedId(), -1, true)\n        end\n    end\nend)\n    handsUp = true\nend, false)\n    handsUp = false\nend, false)\n\nRegisterKeyMapping('+handsup', 'Hands Up', 'keyboard', 'i')\n\n-- Alternate keybinding syntax\nRegisterKeyMapping('~!+handsup', 'Hands Up - Alternate Key', 'keyboard', 'o')"
  ],
  "urls": [
    "https://docs.fivem.net/docs/",
    "https://docs.fivem.net/natives/",
    "https://github.com/citizenfx/fivem/edit/master/ext/native-decls/RegisterKeyMapping.md",
    "https://docs.fivem.net/docs/game-references/input-mapper-parameter-ids/",
    "https://cookbook.fivem.net/2020/01/06/using-the-new-console-key-bindings/",
    "https://www.rockstargames.com/privacy",
    "https://www.rockstargames.com/cookies"
  ],
  "tags": [
    "client"
  ]
}