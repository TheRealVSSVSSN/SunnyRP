{
  "title": "TASK_PERFORM_SEQUENCE_FROM_PROGRESS",
  "breadcrumbs": [
    "Native Reference",
    "TASKAPI",
    "TASK_PERFORM_SEQUENCE_FROM_PROGRESS"
  ],
  "content": "0x89221B16730234F00xFA60601B// TaskPerformSequenceFromProgress\nvoid TASK_PERFORM_SEQUENCE_FROM_PROGRESS(Ped ped, int taskIndex, int progress1, int progress2);Parameters:ped: The ped to perform the task ontaskIndex: progress1: The progress to start fromprogress2: Unknown what it does, it has to be set higher than 0 to not break the sequenceExamples:LuaC#Citizen.CreateThread(function()\n    local animDict = 'timetable@ron@ig_5_p3'\n\n    RequestAnimDict(animDict)\n    while not HasAnimDictLoaded(animDict) do\n        Wait(0)\n    end\n\n    local ped = PlayerPedId()\n    local pos = GetEntityCoords(ped)\n\n    -- you can change the model, but you might have to change the offsets below.\n    local objModelHash = `prop_bench_01a`\n\n    local obj = GetClosestObjectOfType(pos.x, pos.y, pos.z, 5.0, objModelHash, false, false, false)\n    if obj == 0 then\n        print(\"No valid object within range!\")\n        return\n    end\n\n    local tgtPos = GetOffsetFromEntityInWorldCoords(obj, 0.0, -0.7, 0.0)\n\n    -- open the task sequence so we can get our sequence id\n    local sequence = OpenSequenceTask()\n\n    local desiredHeading = GetEntityHeading(obj) - 180.0\n\n    -- go to the entities offset\n    TaskGoStraightToCoord(nil, tgtPos.x, tgtPos.y, tgtPos.z, 1.0, 4000, desiredHeading, 1.0)\n\n    -- sit on the bench indefinitely (you can change -1 here to however long you want to sit)\n    TaskPlayAnim(nil, animDict, 'ig_5_p3_base', 8.0, 8.0, -1, 1)\n\n    -- close the sequence so we can perform it\n    CloseSequenceTask(sequence)\n\n    -- perform the sequence, this will not work if the sequence is still open.\n    -- note that progress1 is set to 1, this means it will skip the first sequence\n    TaskPerformSequenceFromProgress(ped, sequence, 1, 1)\n\n    -- free the sequence slot so it can be re-used\n    ClearSequenceTask(sequence)\n\n    -- cleanup the animation dict so the engine can remove it when its no longer needed\n    RemoveAnimDict(animDict)\nend)",
  "codeBlocks": [
    "// TaskPerformSequenceFromProgress\nvoid TASK_PERFORM_SEQUENCE_FROM_PROGRESS(Ped ped, int taskIndex, int progress1, int progress2);",
    "Citizen.CreateThread(function()\n    local animDict = 'timetable@ron@ig_5_p3'\n\n    RequestAnimDict(animDict)\n    while not HasAnimDictLoaded(animDict) do\n        Wait(0)\n    end\n\n    local ped = PlayerPedId()\n    local pos = GetEntityCoords(ped)\n\n    -- you can change the model, but you might have to change the offsets below.\n    local objModelHash = `prop_bench_01a`\n\n    local obj = GetClosestObjectOfType(pos.x, pos.y, pos.z, 5.0, objModelHash, false, false, false)\n    if obj == 0 then\n        return\n    end\n\n    local tgtPos = GetOffsetFromEntityInWorldCoords(obj, 0.0, -0.7, 0.0)\n\n    -- open the task sequence so we can get our sequence id\n    local sequence = OpenSequenceTask()\n\n    local desiredHeading = GetEntityHeading(obj) - 180.0\n\n    -- go to the entities offset\n    TaskGoStraightToCoord(nil, tgtPos.x, tgtPos.y, tgtPos.z, 1.0, 4000, desiredHeading, 1.0)\n\n    -- sit on the bench indefinitely (you can change -1 here to however long you want to sit)\n    TaskPlayAnim(nil, animDict, 'ig_5_p3_base', 8.0, 8.0, -1, 1)\n\n    -- close the sequence so we can perform it\n    CloseSequenceTask(sequence)\n\n    -- perform the sequence, this will not work if the sequence is still open.\n    -- note that progress1 is set to 1, this means it will skip the first sequence\n    TaskPerformSequenceFromProgress(ped, sequence, 1, 1)\n\n    -- free the sequence slot so it can be re-used\n    ClearSequenceTask(sequence)\n\n    -- cleanup the animation dict so the engine can remove it when its no longer needed\n    RemoveAnimDict(animDict)\nend)"
  ],
  "urls": [
    "https://docs.fivem.net/docs/",
    "https://docs.fivem.net/natives/",
    "https://github.com/citizenfx/natives/edit/master/TASK/TaskPerformSequenceFromProgress.md",
    "https://www.rockstargames.com/privacy",
    "https://www.rockstargames.com/cookies"
  ],
  "tags": [
    "client"
  ]
}